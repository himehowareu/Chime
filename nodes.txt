1:from: from
1:Name: system
1:import: import
1:Print: print
1:Semi: ;
2:from: from
2:Name: syslib
2:import: import
2:Name: ref
2:comma: ,
2:Name: dref
2:comma: ,
2:Name: asm
2:comma: ,
2:Name: dvd
2:comma: ,
2:Name: store
2:comma: ,
2:Name: fetch
2:comma: ,
2:Name: malloc
2:Semi: ;
4:import: import
4:Name: screen
4:Semi: ;
6:String: String
6:Name: hi
6:Assign: =
6:StringLit: "hello"
6:Semi: ;
7:Int: Int
7:Name: age
7:Assign: =
7:Number: 1
7:Semi: ;
8:Float: Float
8:Name: percent
8:Assign: =
8:Period: .
8:Number: 18
8:Semi: ;
9:List: List
9:Name: tests
9:Assign: =
9:OpenSquareBracket: [
9:String: String
9:StringLit: "act"
9:comma: ,
9:Int: Int
9:Number: 24
9:comma: ,
9:Float: Float
9:Period: .
9:Number: 3
9:CloseSquareBracket: ]
9:Semi: ;
10:Bool: Bool
10:Name: running
10:Assign: =
10:True: True
10:Semi: ;
11:String: String
11:Name: name
11:Semi: ;
12:String: String
12:Name: user_input
12:Semi: ;
13:Dict: Dict
13:Name: book
13:Assign: =
13:OpenCrullyBracket: {
13:String: String
13:StringLit: "name"
13:Colin: :
13:String: String
13:StringLit: "red"
13:comma: ,
13:String: String
13:StringLit: "age"
13:Colin: :
13:Int: Int
13:Number: 18
13:CloseCrullyBracket: }
13:Semi: ;
15:Pointer: Pointer
15:Name: mem
15:Assign: =
15:Name: malloc
15:OpenParentheses: (
15:Number: 10
15:CloseParentheses: )
15:Semi: ;
17:Name: age
17:Name: @
17:Name: book
17:OpenSquareBracket: [
17:StringLit: "age"
17:CloseSquareBracket: ]
17:Semi: ;
18:Name: age
18:Assign: =
18:Name: dvd
18:OpenParentheses: (
18:Name: book
18:OpenSquareBracket: [
18:StringLit: "age"
18:CloseSquareBracket: ]
18:CloseParentheses: )
18:Semi: ;
20:Name: free
20:OpenParentheses: (
20:Name: mem
20:CloseParentheses: )
20:Semi: ;
22:Name: decimal
22:Name: @
22:Name: percent
22:Div: /
22:Number: 100
22:Semi: ;
23:Name: decimal
23:Assign: =
23:Name: dvd
23:OpenParentheses: (
23:Name: percent
23:Div: /
23:Number: 100
23:CloseParentheses: )
23:Semi: ;
25:Pointer: Pointer
25:Name: run
25:Ref: ->
25:Name: running
25:Semi: ;
26:Pointer: Pointer
26:Name: run
26:Assign: =
26:Name: ref
26:OpenParentheses: (
26:Name: running
26:CloseParentheses: )
26:Semi: ;
28:Bool: Bool
28:Name: n
28:Dref: <-
28:Name: run
28:Semi: ;
29:Bool: Bool
29:Name: n
29:Assign: =
29:Name: dref
29:OpenParentheses: (
29:Name: run
29:CloseParentheses: )
29:Semi: ;
31:Print: print
31:OpenParentheses: (
31:Dref: <-
31:Name: run
31:CloseParentheses: )
31:Semi: ;
36:Name: store
36:OpenParentheses: (
36:Name: age
36:comma: ,
36:StringLit: "$reg1"
36:CloseParentheses: )
36:Semi: ;
37:Name: asm
37:OpenParentheses: (
37:StringLit: "ls reg1 reg1"
37:CloseParentheses: )
37:Semi: ;
38:Name: fetch
38:OpenParentheses: (
38:Name: age
38:comma: ,
38:StringLit: "$reg1"
38:CloseParentheses: )
38:Semi: ;
40:Print: print
40:OpenParentheses: (
40:StringLit: "the name of the book is"
40:Add: +
40:Name: book
40:OpenSquareBracket: [
40:StringLit: "name"
40:CloseSquareBracket: ]
40:CloseParentheses: )
40:Semi: ;
42:Print: print
42:OpenParentheses: (
42:Name: age
42:CloseParentheses: )
42:Semi: ;
43:Name: age
43:AddEqu: +=
43:Number: 2
43:Semi: ;
44:Print: print
44:OpenParentheses: (
44:Name: book
44:OpenSquareBracket: [
44:StringLit: "age"
44:CloseSquareBracket: ]
44:CloseParentheses: )
44:Semi: ;
46:Name: tests
46:Period: .
46:Name: index
46:OpenParentheses: (
46:Number: 25
46:CloseParentheses: )
46:Semi: ;
48:Name: name
48:Assign: =
48:Name: input
48:OpenParentheses: (
48:StringLit: "what's your name?"
48:CloseParentheses: )
48:Semi: ;
51:If: if
51:OpenParentheses: (
51:Name: name
51:is: is
51:StringLit: "himehowareu"
51:CloseParentheses: )
51:OpenCrullyBracket: {
52:Print: print
52:OpenParentheses: (
52:StringLit: "Hello"
52:Period: .
52:Name: lower
52:OpenParentheses: (
52:CloseParentheses: )
52:Add: +
52:StringLit: "Master"
52:Period: .
52:Name: upper
52:OpenParentheses: (
52:CloseParentheses: )
52:CloseParentheses: )
52:Semi: ;
53:CloseCrullyBracket: }
53:Semi: ;
56:Name: for
56:OpenParentheses: (
56:Name: item
56:in: in
56:Name: tests
56:CloseParentheses: )
56:OpenCrullyBracket: {
57:Print: print
57:OpenParentheses: (
57:Name: item
57:CloseParentheses: )
57:Semi: ;
58:If: if
58:OpenParentheses: (
58:Name: item
58:is: is
58:Int: Int
58:CloseParentheses: )
58:OpenCrullyBracket: {
59:Print: print
59:OpenParentheses: (
59:StringLit: "is an intinger"
59:CloseParentheses: )
59:Semi: ;
60:CloseCrullyBracket: }
60:Elif: elif
60:OpenParentheses: (
60:Name: item
60:is: is
60:Float: Float
60:CloseParentheses: )
60:OpenCrullyBracket: {
61:Print: print
61:OpenParentheses: (
61:StringLit: "is a float"
61:CloseParentheses: )
61:Semi: ;
62:CloseCrullyBracket: }
62:Elif: elif
62:OpenParentheses: (
62:Name: item
62:is: is
62:String: String
62:CloseParentheses: )
62:OpenCrullyBracket: {
63:Print: print
63:OpenParentheses: (
63:StringLit: "is a string"
63:CloseParentheses: )
63:Semi: ;
64:CloseCrullyBracket: }
64:Elif: elif
64:OpenParentheses: (
64:Name: item
64:is: is
64:Bool: Bool
64:CloseParentheses: )
64:OpenCrullyBracket: {
65:Print: print
65:OpenParentheses: (
65:StringLit: "is a bool"
65:CloseParentheses: )
65:Semi: ;
66:CloseCrullyBracket: }
66:Else: else
66:OpenCrullyBracket: {
67:Print: print
67:OpenParentheses: (
67:StringLit: "is a list"
67:CloseParentheses: )
67:Semi: ;
68:CloseCrullyBracket: }
68:Semi: ;
69:Print: print
69:OpenParentheses: (
69:StringLit: "with length of "
69:Add: +
69:Name: len
69:OpenParentheses: (
69:Name: item
69:CloseParentheses: )
69:CloseParentheses: )
69:Semi: ;
70:CloseCrullyBracket: }
70:Semi: ;
73:List: List
73:Name: path
73:Assign: =
73:StringLit: "c:/user/himehowareu/desktop"
73:Period: .
73:Name: split
73:OpenParentheses: (
73:StringLit: "/"
73:CloseParentheses: )
73:Semi: ;
75:Int: Int
75:Name: place
75:Assign: =
75:StringLit: "abc"
75:Period: .
75:Name: find
75:OpenParentheses: (
75:StringLit: "c"
75:CloseParentheses: )
75:Semi: ;
77:List: List
77:Name: keys
77:Semi: ;
78:Name: key
78:Assign: =
78:Name: book
78:Period: .
78:Name: key
78:OpenParentheses: (
78:CloseParentheses: )
78:Semi: ;
81:Object: Obj
81:Name: person
81:OpenParentheses: (
81:CloseParentheses: )
81:OpenCrullyBracket: {
82:String: String
82:Name: name
82:Assign: =
82:StringLit: "default"
82:Semi: ;
83:def: def
83:Nothing: Nothing
83:Name: foo
83:OpenParentheses: (
83:CloseParentheses: )
83:OpenCrullyBracket: {
84:Print: print
84:OpenParentheses: (
84:Name: parent
84:Period: .
84:Name: name
84:CloseParentheses: )
84:Semi: ;
85:Name: parent
85:Period: .
85:Name: times
85:AddEqu: +=
85:Number: 1
85:Semi: ;
86:CloseCrullyBracket: }
86:Semi: ;
87:Int: Int
87:Name: times
87:Assign: =
87:Number: 0
87:Semi: ;
88:CloseCrullyBracket: }
88:Semi: ;
90:Name: person
90:Name: john
90:Semi: ;
91:Name: john
91:Period: .
91:Name: name
91:Assign: =
91:StringLit: "john"
91:Semi: ;
92:Name: john
92:Period: .
92:Name: foo
92:OpenParentheses: (
92:CloseParentheses: )
92:Semi: ;
93:Name: john
93:Period: .
93:Name: foo
93:OpenParentheses: (
93:CloseParentheses: )
93:Semi: ;
94:Name: john
94:Period: .
94:Name: foo
94:OpenParentheses: (
94:CloseParentheses: )
94:Semi: ;
95:Name: john
95:Period: .
95:Name: foo
95:OpenParentheses: (
95:CloseParentheses: )
95:Semi: ;
96:Print: print
96:OpenParentheses: (
96:Name: john
96:Period: .
96:Name: times
96:CloseParentheses: )
96:Semi: ;
98:def: def
98:Bool: Bool
98:Name: foo
98:OpenParentheses: (
98:String: String
98:Name: name
98:CloseParentheses: )
98:OpenCrullyBracket: {
99:If: if
99:OpenParentheses: (
99:Name: name
99:is: is
99:StringLit: ""
99:CloseParentheses: )
99:OpenCrullyBracket: {
100:Name: return
100:OpenParentheses: (
100:False: False
100:CloseParentheses: )
100:Semi: ;
101:CloseCrullyBracket: }
101:Else: else
101:OpenCrullyBracket: {
102:Name: return
102:OpenParentheses: (
102:True: True
102:CloseParentheses: )
102:Semi: ;
103:CloseCrullyBracket: }
103:Semi: ;
104:CloseCrullyBracket: }
104:Semi: ;
107:Name: tests
107:Period: .
107:Name: append
107:OpenParentheses: (
107:Dict: Dict
107:OpenCrullyBracket: {
107:String: String
107:StringLit: "d"
107:comma: ,
107:Int: Int
107:Number: 4
107:CloseCrullyBracket: }
107:CloseParentheses: )
107:Semi: ;
109:Print: print
109:OpenParentheses: (
109:Name: int
109:OpenParentheses: (
109:StringLit: "3"
109:CloseParentheses: )
109:Add: +
109:Number: 4
109:CloseParentheses: )
109:Semi: ;
110:Print: print
110:OpenParentheses: (
110:Number: 2
110:Min: -
110:Number: 1
110:CloseParentheses: )
110:Semi: ;
111:Print: print
111:OpenParentheses: (
111:Number: 1
111:Add: +
111:Number: 1
111:CloseParentheses: )
111:Semi: ;
112:Print: print
112:OpenParentheses: (
112:Number: 2
112:Mul: *
112:Number: 1
112:CloseParentheses: )
112:Semi: ;
113:Print: print
113:OpenParentheses: (
113:Number: 7
113:Div: /
113:Number: 2
113:CloseParentheses: )
113:Semi: ;
114:Print: print
114:OpenParentheses: (
114:Period: .
114:Number: 70
114:Div: /
114:Number: 2
114:CloseParentheses: )
114:Semi: ;
115:Print: print
115:OpenParentheses: (
115:Number: 2
115:Mul: *
115:Number: 8
115:CloseParentheses: )
115:Semi: ;
116:Print: print
116:OpenParentheses: (
116:Number: 7
116:Mod: %
116:Number: 2
116:CloseParentheses: )
116:Semi: ;
118:Print: print
118:OpenParentheses: (
118:Name: int
118:OpenParentheses: (
118:Period: .
118:Number: 2
118:Add: +
118:Period: .
118:Number: 49
118:CloseParentheses: )
118:CloseParentheses: )
118:Semi: ;
120:Print: print
120:OpenParentheses: (
120:StringLit: "the answer is"
120:Add: +
120:Name: str
120:OpenParentheses: (
120:Number: 25
120:CloseParentheses: )
120:CloseParentheses: )
120:Semi: ;
126:While: while
126:OpenParentheses: (
126:Name: running
126:CloseParentheses: )
126:OpenCrullyBracket: {
127:Name: user_input
127:Assign: =
127:Name: input
127:OpenParentheses: (
127:StringLit: ">"
127:CloseParentheses: )
127:Semi: ;
128:If: if
128:OpenParentheses: (
128:Name: foo
128:OpenParentheses: (
128:Name: user_input
128:CloseParentheses: )
128:CloseParentheses: )
128:OpenCrullyBracket: {
129:Pass: pass
129:Semi: ;
130:CloseCrullyBracket: }
130:Elif: elif
130:OpenParentheses: (
130:Name: user_input
130:Period: .
130:Name: lower
130:OpenParentheses: (
130:CloseParentheses: )
130:is: is
130:StringLit: "exit"
130:CloseParentheses: )
130:OpenCrullyBracket: {
131:Name: running
131:Period: .
131:Name: invert
131:OpenParentheses: (
131:CloseParentheses: )
131:Semi: ;
132:CloseCrullyBracket: }
132:Elif: elif
132:OpenParentheses: (
132:Name: user_input
132:Period: .
132:Name: lower
132:OpenParentheses: (
132:CloseParentheses: )
132:is: is
132:StringLit: "user"
132:CloseParentheses: )
132:OpenCrullyBracket: {
133:If: if
133:OpenParentheses: (
133:Name: name
133:is: is
133:StringLit: "himehowareu"
133:CloseParentheses: )
133:OpenCrullyBracket: {
134:Print: print
134:OpenParentheses: (
134:StringLit: "master "
134:Add: +
134:Name: name
134:CloseParentheses: )
134:Semi: ;
135:CloseCrullyBracket: }
135:Else: else
135:OpenCrullyBracket: {
136:Print: print
136:OpenParentheses: (
136:Name: name
136:CloseParentheses: )
136:Semi: ;
137:CloseCrullyBracket: }
137:Semi: ;
138:CloseCrullyBracket: }
138:Else: else
138:OpenCrullyBracket: {
139:Print: print
139:OpenParentheses: (
139:StringLit: "not valid input"
139:CloseParentheses: )
139:Semi: ;
140:CloseCrullyBracket: }
140:Semi: ;
141:CloseCrullyBracket: }
141:Semi: ;
144:Name: screen
144:Period: .
144:Name: backgroundcolor
144:OpenParentheses: (
144:Name: screen
144:Period: .
144:Name: black
144:CloseParentheses: )
144:Semi: ;
145:Name: screen
145:Period: .
145:Name: foregroundcolor
145:OpenParentheses: (
145:Name: screen
145:Period: .
145:Name: green
145:CloseParentheses: )
145:Semi: ;
146:Name: screen
146:Period: .
146:Name: write
146:OpenParentheses: (
146:StringLit: "Hello world"
146:CloseParentheses: )
146:Semi: ;
148:Name: screen
148:Period: .
148:Name: size
148:Name: temp
148:Assign: =
148:Name: screen
148:Period: .
148:Name: size
148:Semi: ;
156:Int: Int
156:Name: x
156:Assign: =
156:Name: temp
156:Period: .
156:Name: x
156:Semi: ;
157:Int: Int
157:Name: y
157:Assign: =
157:Name: temp
157:Period: .
157:Name: y
157:Semi: ;
159:Name: screen
159:Period: .
159:Name: box
159:Name: test
159:Assign: =
159:Name: screen
159:Period: .
159:Name: box
159:OpenParentheses: (
159:Number: 5
159:comma: ,
159:Number: 5
159:CloseParentheses: )
159:Semi: ;
161:Name: screen
161:Period: .
161:Name: draw
161:OpenParentheses: (
161:Name: test
161:comma: ,
161:OpenParentheses: (
161:Name: x
161:Min: -
161:Number: 5
161:CloseParentheses: )
161:Div: /
161:Number: 2
161:comma: ,
161:OpenParentheses: (
161:Name: y
161:Min: -
161:Number: 5
161:CloseParentheses: )
161:Div: /
161:Number: 2
161:CloseParentheses: )
161:Semi: ;
